{"name": "Залогиненный пользователь может оформить заказ", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"aa118a6b-915c-43f9-98e6-86c4b27b831e\")>\nregistration_user = ['Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY3MjBlODgyOWVkMjgwMDAxYjRmYzA1MSIsImlhdCI6MTczMDIwOTkyMiwiZXhwIjoxNzMwMjExMTIyfQ.uExxuZ3r1smdCF_8q87nWKk4K7_KOt4wPzTJuAn67wE', 'ugibson@yandex.ru', ')CrT2Ot', 'charles95']\nmain_page = <pages.main_page.MainPage object at 0x000001985CDE34D0>, entrance_page = <pages.entrance_page.EntrancePage object at 0x000001985C7A6990>\n\n    @pytest.fixture()\n    def personal_account(driver, registration_user, main_page, entrance_page):\n>       main_page.wait_element_invisibility_of_element(10, MainPageLocators.ELEMENT)\n\nconftest.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\base_page.py:27: in wait_element_invisibility_of_element\n    WebDriverWait(self.driver, timeout).until(expected_conditions.invisibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"aa118a6b-915c-43f9-98e6-86c4b27b831e\")>\nmethod = <function invisibility_of_element_located.<locals>._predicate at 0x000001985CC81800>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1730209877007, "stop": 1730209877007, "uuid": "02b784ea-9d85-4bda-8fd5-7f9b447ecce3", "historyId": "3acb5f41f843cfa924004816f41b7c79", "testCaseId": "f97e4f3c075bddf321c0ff3f6e3c43eb", "fullName": "tests.test_checking_the_main_functionality.TestCheckingTheMainFunctionality#test_login_user_success_making_an_order", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_checking_the_main_functionality"}, {"name": "subSuite", "value": "TestCheckingTheMainFunctionality"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "10028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_checking_the_main_functionality"}]}